import {
  User,
  ConnectedAccount,
  Email,
  EmailThread,
  DraftResponse,
  WorkflowTemplate,
  ChatMessage,
  AnalyticsData,
  EmailAnalysis,
  SuggestedAttachment,
  DocumentTemplate,
  TriggerCondition,
  FollowUpAction,
  ProcessingJob,
  SystemStatus
} from '../types';

// Mock User Data
export const mockUser: User = {
  id: 'user_123',
  email: 'john.doe@company.com',
  createdAt: new Date('2024-01-15'),
  subscription: 'pro',
  preferences: {
    responseStyle: 'auto',
    autoGenerateDrafts: true,
    confidenceThreshold: 0.7,
    excludedSenders: ['noreply@spam.com', 'marketing@unwanted.com'],
    workflowNotifications: true,
    learningEnabled: true
  },
  connectedAccounts: []
};

// Mock Connected Accounts
export const mockConnectedAccounts: ConnectedAccount[] = [
  {
    id: 'account_gmail_1',
    provider: 'gmail',
    email: 'john.doe@company.com',
    displayName: 'John Doe (Work)',
    isActive: true,
    lastSyncAt: new Date(Date.now() - 5 * 60 * 1000), // 5 minutes ago
    learningStatus: 'complete',
    emailCount: 2847,
    processingStats: {
      totalProcessed: 156,
      draftsGenerated: 89,
      draftsAccepted: 73,
      averageConfidence: 0.82
    }
  },
  {
    id: 'account_outlook_1',
    provider: 'outlook',
    email: 'j.doe@clientcompany.com',
    displayName: 'John Doe (Client Relations)',
    isActive: true,
    lastSyncAt: new Date(Date.now() - 12 * 60 * 1000), // 12 minutes ago
    learningStatus: 'learning',
    emailCount: 1203,
    processingStats: {
      totalProcessed: 45,
      draftsGenerated: 23,
      draftsAccepted: 18,
      averageConfidence: 0.75
    }
  },
  {
    id: 'account_gmail_2',
    provider: 'gmail',
    email: 'john.personal@gmail.com',
    displayName: 'John Doe (Personal)',
    isActive: false,
    lastSyncAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000), // 2 days ago
    learningStatus: 'pending',
    emailCount: 892,
    processingStats: {
      totalProcessed: 0,
      draftsGenerated: 0,
      draftsAccepted: 0,
      averageConfidence: 0
    }
  }
];

// Mock Emails
export const mockEmails: Email[] = [
  {
    id: 'email_1',
    provider: 'gmail',
    threadId: 'thread_1',
    from: 'sarah.johnson@newclient.com',
    fromName: 'Sarah Johnson',
    to: ['john.doe@company.com'],
    subject: 'Welcome to TechCorp - Next Steps for Onboarding',
    content: `Hi John,

Thank you for choosing TechCorp for your software development needs. I'm excited to work with you on this project.

To get started, I'll need a few things from you:
1. Signed contract (attached)
2. Project requirements document
3. Access to your development environment
4. Timeline preferences

Could you please send these over by Friday? Also, I'd like to schedule a kickoff call for next week.

Looking forward to working together!

Best regards,
Sarah Johnson
Project Manager, TechCorp`,
    snippet: 'Thank you for choosing TechCorp for your software development needs...',
    receivedAt: new Date(Date.now() - 2 * 60 * 60 * 1000), // 2 hours ago
    labels: ['INBOX', 'IMPORTANT'],
    attachments: [
      {
        id: 'att_1',
        filename: 'TechCorp_Contract_2024.pdf',
        mimeType: 'application/pdf',
        size: 245760
      }
    ],
    isRead: false,
    requiresResponse: true,
    urgency: 'medium',
    category: 'onboarding'
  },
  {
    id: 'email_2',
    provider: 'outlook',
    threadId: 'thread_2',
    from: 'support@clientsoftware.com',
    fromName: 'ClientSoftware Support',
    to: ['j.doe@clientcompany.com'],
    subject: 'Re: Integration Issues with API v2.1',
    content: `Hi John,

Thanks for reporting the integration issues. Our development team has identified the problem and we have a fix ready.

The issue was related to the authentication headers in the new API version. We've updated our documentation and created a migration guide.

Please find attached:
- Updated API documentation
- Migration guide
- Sample code for the new authentication flow

Let me know if you need any assistance with the implementation.

Best,
Mike Chen
Technical Support Lead`,
    snippet: 'Thanks for reporting the integration issues. Our development team has identified...',
    receivedAt: new Date(Date.now() - 4 * 60 * 60 * 1000), // 4 hours ago
    labels: ['INBOX'],
    attachments: [
      {
        id: 'att_2',
        filename: 'API_v2.1_Documentation.pdf',
        mimeType: 'application/pdf',
        size: 1024000
      },
      {
        id: 'att_3',
        filename: 'Migration_Guide.md',
        mimeType: 'text/markdown',
        size: 15360
      }
    ],
    isRead: true,
    requiresResponse: true,
    urgency: 'high',
    category: 'support'
  },
  {
    id: 'email_3',
    provider: 'gmail',
    threadId: 'thread_3',
    from: 'marketing@prospects.com',
    fromName: 'Lisa Wang',
    to: ['john.doe@company.com'],
    subject: 'Partnership Opportunity - Marketing Automation Platform',
    content: `Hello John,

I hope this email finds you well. I'm reaching out from Prospects.com regarding a potential partnership opportunity.

We've been following your company's growth and are impressed with your innovative approach to software development. We believe there could be great synergy between our marketing automation platform and your services.

Would you be interested in a brief 15-minute call to discuss how we might work together? I'm available next week at your convenience.

Best regards,
Lisa Wang
Business Development Manager
Prospects.com`,
    snippet: 'I hope this email finds you well. I\'m reaching out from Prospects.com regarding...',
    receivedAt: new Date(Date.now() - 6 * 60 * 60 * 1000), // 6 hours ago
    labels: ['INBOX'],
    attachments: [],
    isRead: true,
    requiresResponse: false,
    urgency: 'low',
    category: 'sales'
  }
];

// Mock Email Threads
export const mockEmailThreads: EmailThread[] = [
  {
    id: 'thread_1',
    subject: 'Welcome to TechCorp - Next Steps for Onboarding',
    participants: ['sarah.johnson@newclient.com', 'john.doe@company.com'],
    emails: [mockEmails[0]],
    lastActivity: mockEmails[0].receivedAt,
    hasAIDraft: true,
    workflowDetected: 'client_onboarding',
    status: 'draft_ready'
  },
  {
    id: 'thread_2',
    subject: 'Re: Integration Issues with API v2.1',
    participants: ['support@clientsoftware.com', 'j.doe@clientcompany.com'],
    emails: [mockEmails[1]],
    lastActivity: mockEmails[1].receivedAt,
    hasAIDraft: true,
    workflowDetected: 'technical_support',
    status: 'draft_ready'
  },
  {
    id: 'thread_3',
    subject: 'Partnership Opportunity - Marketing Automation Platform',
    participants: ['marketing@prospects.com', 'john.doe@company.com'],
    emails: [mockEmails[2]],
    lastActivity: mockEmails[2].receivedAt,
    hasAIDraft: false,
    status: 'unread'
  }
];

// Mock Draft Responses
export const mockDraftResponses: DraftResponse[] = [
  {
    id: 'draft_1',
    emailId: 'email_1',
    content: `Hi Sarah,

Thank you for the warm welcome! I'm equally excited to work with TechCorp on this project.

I'll gather the requested items and have them sent over by Thursday (one day ahead of your Friday deadline):

1. ✅ Signed contract - I'll review and return this by tomorrow
2. ✅ Project requirements document - I have this ready and will attach it to this email
3. ✅ Development environment access - I'll set up a staging environment and send credentials
4. ✅ Timeline preferences - I'm flexible, but ideally we'd like to launch by end of Q2

For the kickoff call, I'm available next Tuesday or Wednesday afternoon. Please let me know what works best for your schedule.

Looking forward to a successful partnership!

Best regards,
John Doe`,
    subject: 'Re: Welcome to TechCorp - Next Steps for Onboarding',
    attachments: [
      {
        filename: 'Project_Requirements_v1.2.pdf',
        description: 'Detailed project requirements and specifications',
        confidence: 0.9,
        workflowSource: 'client_onboarding'
      },
      {
        filename: 'Company_Profile.pdf',
        description: 'Company background and previous work samples',
        confidence: 0.7,
        workflowSource: 'client_onboarding'
      }
    ],
    confidence: 0.87,
    workflowUsed: 'client_onboarding',
    reasoning: 'This response follows the established client onboarding workflow pattern. It addresses all requested items systematically, shows proactive timeline management, and maintains the professional yet friendly tone typical of your client communications.',
    generatedAt: new Date(Date.now() - 30 * 60 * 1000), // 30 minutes ago
    status: 'pending',
    estimatedTimeToWrite: 12
  },
  {
    id: 'draft_2',
    emailId: 'email_2',
    content: `Hi Mike,

Thank you for the quick response and for identifying the issue. Your team's efficiency in resolving this is much appreciated.

I've reviewed the attached documentation and migration guide. The new authentication flow looks straightforward, and I appreciate the sample code - that will definitely speed up our implementation.

I have a couple of quick questions:
1. Is there a timeline for when API v2.0 will be deprecated?
2. Do you recommend migrating all endpoints at once, or can we do it gradually?

I'll start implementing the changes this week and will reach out if I run into any issues during testing.

Thanks again for the excellent support!

Best regards,
John Doe`,
    subject: 'Re: Integration Issues with API v2.1',
    attachments: [],
    confidence: 0.82,
    workflowUsed: 'technical_support',
    reasoning: 'This response follows your typical technical support communication pattern - acknowledging the solution, asking clarifying questions, and providing a clear next steps timeline.',
    generatedAt: new Date(Date.now() - 45 * 60 * 1000), // 45 minutes ago
    status: 'pending',
    estimatedTimeToWrite: 8
  }
];

// Mock Document Templates
export const mockDocumentTemplates: DocumentTemplate[] = [
  {
    id: 'doc_1',
    filename: 'Project_Requirements_Template.pdf',
    description: 'Standard project requirements document template',
    category: 'onboarding',
    downloadUrl: '/documents/project_requirements_template.pdf',
    lastUpdated: new Date('2024-01-10'),
    usageCount: 23
  },
  {
    id: 'doc_2',
    filename: 'Company_Profile.pdf',
    description: 'Company background and capabilities overview',
    category: 'onboarding',
    downloadUrl: '/documents/company_profile.pdf',
    lastUpdated: new Date('2024-01-05'),
    usageCount: 31
  },
  {
    id: 'doc_3',
    filename: 'API_Integration_Guide.pdf',
    description: 'Technical guide for API integrations',
    category: 'support',
    downloadUrl: '/documents/api_integration_guide.pdf',
    lastUpdated: new Date('2024-01-12'),
    usageCount: 15
  }
];

// Mock Workflow Templates
export const mockWorkflowTemplates: WorkflowTemplate[] = [
  {
    id: 'workflow_1',
    name: 'Client Onboarding',
    description: 'Standard workflow for onboarding new clients',
    category: 'onboarding',
    triggerConditions: [
      {
        type: 'keyword',
        value: 'welcome',
        operator: 'contains',
        weight: 0.8
      },
      {
        type: 'keyword',
        value: 'onboarding',
        operator: 'contains',
        weight: 0.9
      },
      {
        type: 'keyword',
        value: 'next steps',
        operator: 'contains',
        weight: 0.7
      }
    ],
    responseTemplate: `Thank you for the warm welcome! I'm excited to work with {company_name} on this project.

I'll gather the requested items and have them sent over by {deadline}:

{checklist_items}

For the kickoff call, I'm available {availability}. Please let me know what works best for your schedule.

Looking forward to a successful partnership!`,
    requiredDocuments: [mockDocumentTemplates[0], mockDocumentTemplates[1]],
    followUpActions: [
      {
        type: 'schedule_reminder',
        delay: 24,
        description: 'Remind to follow up if no response received',
        isActive: true
      },
      {
        type: 'create_task',
        delay: 0,
        description: 'Create project setup tasks in CRM',
        isActive: true
      }
    ],
    usageCount: 23,
    successRate: 0.91,
    averageResponseTime: 8.5,
    lastUsed: new Date(Date.now() - 2 * 60 * 60 * 1000),
    isActive: true,
    createdBy: 'ai',
    tags: ['client', 'onboarding', 'project-start']
  },
  {
    id: 'workflow_2',
    name: 'Technical Support Response',
    description: 'Standard workflow for responding to technical support requests',
    category: 'support',
    triggerConditions: [
      {
        type: 'keyword',
        value: 'support',
        operator: 'contains',
        weight: 0.8
      },
      {
        type: 'keyword',
        value: 'issue',
        operator: 'contains',
        weight: 0.7
      },
      {
        type: 'keyword',
        value: 'problem',
        operator: 'contains',
        weight: 0.7
      }
    ],
    responseTemplate: `Thank you for the {response_type} response and for {action_taken}.

I've reviewed the {provided_materials} and {assessment}.

I have a couple of questions:
{questions}

I'll {next_steps} and will reach out if I run into any issues.

Thanks again for the excellent support!`,
    requiredDocuments: [mockDocumentTemplates[2]],
    followUpActions: [
      {
        type: 'schedule_reminder',
        delay: 48,
        description: 'Follow up on implementation progress',
        isActive: true
      }
    ],
    usageCount: 15,
    successRate: 0.87,
    averageResponseTime: 6.2,
    lastUsed: new Date(Date.now() - 45 * 60 * 1000),
    isActive: true,
    createdBy: 'ai',
    tags: ['support', 'technical', 'problem-solving']
  },
  {
    id: 'workflow_3',
    name: 'Sales Inquiry Response',
    description: 'Professional response to sales and partnership inquiries',
    category: 'sales',
    triggerConditions: [
      {
        type: 'keyword',
        value: 'partnership',
        operator: 'contains',
        weight: 0.9
      },
      {
        type: 'keyword',
        value: 'opportunity',
        operator: 'contains',
        weight: 0.8
      },
      {
        type: 'keyword',
        value: 'collaboration',
        operator: 'contains',
        weight: 0.7
      }
    ],
    responseTemplate: `Thank you for reaching out about the partnership opportunity.

I appreciate you taking the time to research our company. {personalized_response}

I'd be happy to explore potential synergies between our organizations. {availability_statement}

Looking forward to our conversation!`,
    requiredDocuments: [mockDocumentTemplates[1]],
    followUpActions: [
      {
        type: 'send_calendar_invite',
        delay: 2,
        description: 'Send calendar invite for partnership discussion',
        isActive: true
      }
    ],
    usageCount: 8,
    successRate: 0.75,
    averageResponseTime: 4.8,
    lastUsed: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000),
    isActive: true,
    createdBy: 'user',
    tags: ['sales', 'partnership', 'business-development']
  }
];

// Mock Chat Messages
export const mockChatMessages: ChatMessage[] = [
  {
    id: 'chat_1',
    type: 'user',
    content: 'Show me my email patterns from this week',
    timestamp: new Date(Date.now() - 10 * 60 * 1000),
  },
  {
    id: 'chat_2',
    type: 'assistant',
    content: `Here's your email activity from this week:

📊 **Email Summary**
- Total emails received: 47
- Emails requiring response: 12
- AI drafts generated: 8
- Drafts accepted: 6 (75% acceptance rate)

🔍 **Top Patterns Detected:**
1. **Client Onboarding** (3 emails) - 91% success rate
2. **Technical Support** (2 emails) - 87% success rate  
3. **Sales Inquiries** (1 email) - 75% success rate

⏱️ **Time Saved:** Approximately 2.3 hours this week

Would you like me to show you details about any specific workflow or email?`,
    timestamp: new Date(Date.now() - 9 * 60 * 1000),
    actions: [
      {
        type: 'view_email',
        label: 'View Recent Onboarding Emails',
        data: { category: 'onboarding' }
      },
      {
        type: 'generate_report',
        label: 'Generate Weekly Report',
        data: { timeframe: 'week' }
      }
    ]
  },
  {
    id: 'chat_3',
    type: 'user',
    content: 'Can you improve the client onboarding workflow to be more personal?',
    timestamp: new Date(Date.now() - 5 * 60 * 1000),
  },
  {
    id: 'chat_4',
    type: 'assistant',
    content: `I can definitely help make your client onboarding workflow more personal! Here are some improvements I suggest:

✨ **Personalization Enhancements:**
1. **Dynamic greeting** - Use the client's name and company
2. **Reference their specific project** - Mention details from their inquiry
3. **Customize timeline** - Adjust based on project complexity
4. **Add personal touch** - Include a brief note about why you're excited about their project

🔧 **Updated Template Preview:**
"Hi {client_name}, thank you for choosing us for {project_type}! I'm particularly excited about {specific_aspect} - it aligns perfectly with our expertise in {relevant_area}..."

Would you like me to update the workflow with these changes?`,
    timestamp: new Date(Date.now() - 4 * 60 * 1000),
    context: {
      workflowId: 'workflow_1'
    },
    actions: [
      {
        type: 'edit_workflow',
        label: 'Update Onboarding Workflow',
        data: { workflowId: 'workflow_1', changes: 'personalization' }
      }
    ]
  }
];

// Mock Analytics Data
export const mockAnalyticsData: AnalyticsData = {
  timeframe: 'week',
  emailMetrics: {
    totalEmails: 47,
    emailsRequiringResponse: 12,
    averageResponseTime: 2.3, // hours
    responseRate: 0.92,
    topSenders: [
      { email: 'sarah.johnson@newclient.com', count: 3 },
      { email: 'support@clientsoftware.com', count: 2 },
      { email: 'marketing@prospects.com', count: 2 }
    ],
    emailsByCategory: [
      { category: 'onboarding', count: 8 },
      { category: 'support', count: 6 },
      { category: 'sales', count: 4 },
      { category: 'meeting', count: 3 },
      { category: 'other', count: 26 }
    ],
    dailyVolume: [
      { date: '2024-01-15', count: 8 },
      { date: '2024-01-16', count: 12 },
      { date: '2024-01-17', count: 6 },
      { date: '2024-01-18', count: 9 },
      { date: '2024-01-19', count: 7 },
      { date: '2024-01-20', count: 3 },
      { date: '2024-01-21', count: 2 }
    ]
  },
  aiPerformance: {
    draftsGenerated: 8,
    draftsAccepted: 6,
    averageConfidence: 0.82,
    averageGenerationTime: 7.5, // seconds
    userSatisfactionRating: 4.3,
    improvementRate: 0.15,
    timeSaved: 2.3, // hours
    accuracyTrend: [
      { date: '2024-01-15', accuracy: 0.78 },
      { date: '2024-01-16', accuracy: 0.81 },
      { date: '2024-01-17', accuracy: 0.79 },
      { date: '2024-01-18', accuracy: 0.84 },
      { date: '2024-01-19', accuracy: 0.86 },
      { date: '2024-01-20', accuracy: 0.83 },
      { date: '2024-01-21', accuracy: 0.87 }
    ]
  },
  workflowMetrics: {
    totalWorkflows: 3,
    activeWorkflows: 3,
    mostUsedWorkflows: [
      { name: 'Client Onboarding', usage: 23 },
      { name: 'Technical Support Response', usage: 15 },
      { name: 'Sales Inquiry Response', usage: 8 }
    ],
    workflowSuccessRates: [
      { name: 'Client Onboarding', rate: 0.91 },
      { name: 'Technical Support Response', rate: 0.87 },
      { name: 'Sales Inquiry Response', rate: 0.75 }
    ],
    newWorkflowsDetected: 1,
    workflowEfficiency: [
      { name: 'Client Onboarding', timeReduction: 8.5 },
      { name: 'Technical Support Response', timeReduction: 6.2 },
      { name: 'Sales Inquiry Response', timeReduction: 4.8 }
    ]
  },
  userEngagement: {
    dailyActiveUsers: 1,
    sessionDuration: 24.5, // minutes
    featuresUsed: [
      { feature: 'Draft Review', usage: 8 },
      { feature: 'Workflow Management', usage: 3 },
      { feature: 'Chat Assistant', usage: 5 },
      { feature: 'Analytics', usage: 2 }
    ],
    userRetention: [
      { period: 'Daily', rate: 0.95 },
      { period: 'Weekly', rate: 0.87 },
      { period: 'Monthly', rate: 0.78 }
    ],
    feedbackSubmissions: 4,
    supportTickets: 0
  }
};

// Mock Processing Jobs
export const mockProcessingJobs: ProcessingJob[] = [
  {
    id: 'job_1',
    type: 'draft_generation',
    status: 'completed',
    emailId: 'email_1',
    userId: 'user_123',
    startedAt: new Date(Date.now() - 35 * 60 * 1000),
    completedAt: new Date(Date.now() - 30 * 60 * 1000),
    progress: 100,
  },
  {
    id: 'job_2',
    type: 'email_analysis',
    status: 'processing',
    emailId: 'email_3',
    userId: 'user_123',
    startedAt: new Date(Date.now() - 2 * 60 * 1000),
    progress: 65,
    estimatedTimeRemaining: 30 // seconds
  }
];

// Mock System Status
export const mockSystemStatus: SystemStatus = {
  emailProviders: {
    gmail: 'connected',
    outlook: 'connected'
  },
  aiServices: {
    openai: 'operational',
    embeddings: 'operational'
  },
  processingQueue: {
    pending: 2,
    processing: 1,
    failed: 0
  },
  lastUpdated: new Date(Date.now() - 30 * 1000) // 30 seconds ago
};

// Export all mock data
export const mockData = {
  user: mockUser,
  connectedAccounts: mockConnectedAccounts,
  emails: mockEmails,
  emailThreads: mockEmailThreads,
  draftResponses: mockDraftResponses,
  workflowTemplates: mockWorkflowTemplates,
  documentTemplates: mockDocumentTemplates,
  chatMessages: mockChatMessages,
  analyticsData: mockAnalyticsData,
  processingJobs: mockProcessingJobs,
  systemStatus: mockSystemStatus
};